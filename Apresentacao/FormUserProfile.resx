<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zv8H3651zGZd40YAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnEncerrarProfile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3QAAAN0AEQbD0HAAAAB3RJ
        TUUH4gcMFzADMIihPQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADSSURBVDhP
        lZNJEoIwEEW5kKh75zM434GkO9di56EU1EPYX7sXyJS8KorUT96nKYrMEd2IaJclAgdu5kLYeqJXSgnO
        NhxZbGJLWrKhJc+hkl7ZKJjXfSWjsuG9X/2XRMsGMy9FqCEky4ZMssAkcr2TZSDSXuS7FD0881XjOEyW
        V5ngknUl2UW3h/nKeKr3uUZ4nRwljvmsUTddsmElcj9p1ETHrooQphq1wJ5OctToh8lyn2nUC87I2Vom
        OVgAGd98VDasBC5+51JGm+teNHAcUfkBQHqd6by1KCEAAAAASUVORK5CYII=
</value>
  </data>
</root>